name: ClipGo Deployment

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  build-extension:
    runs-on: ubuntu-latest
    outputs:
      extension-zip: ${{ steps.zip.outputs.filename }}
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run all tests
      run: npm run test:all

    - name: Get version from manifest
      id: version
      run: echo "version=$(node -e "console.log(require('./manifest.json').version)")" >> $GITHUB_OUTPUT

    - name: Package extension
      id: zip
      run: |
        zip -r clipgo-v${{ steps.version.outputs.version }}.zip \
          manifest.json \
          background.js \
          content.js \
          popup.js \
          popup.html \
          popup.css \
          popup-overlay.css \
          icons/ \
          _locales/ \
          src/ \
          -x "*.log" -x "*.tmp" -x "node_modules/*" -x ".git/*"
        echo "filename=clipgo-v${{ steps.version.outputs.version }}.zip" >> $GITHUB_OUTPUT

    - name: Upload extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: clipgo-extension
        path: clipgo-v${{ steps.version.outputs.version }}.zip

  test-deployment:
    needs: build-extension
    runs-on: ubuntu-latest

    steps:
    - name: Download extension artifact
      uses: actions/download-artifact@v4
      with:
        name: clipgo-extension

    - name: Extract and test extension
      run: |
        unzip -l clipgo-v${{ needs.build-extension.outputs.version }}.zip
        echo "✅ Extension package validation completed"

  chrome-web-store:
    needs: [build-extension, test-deployment]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Download extension artifact
      uses: actions/download-artifact@v4
      with:
        name: clipgo-extension

    - name: Upload to Chrome Web Store
      run: |
        echo "🚀 Ready for Chrome Web Store deployment"
        echo "Extension version: ${{ needs.build-extension.outputs.version }}"
        echo "Package: clipgo-v${{ needs.build-extension.outputs.version }}.zip"
        echo "⚠️  Manual upload required: Visit https://chrome.google.com/webstore/devconsole/"

  create-release:
    needs: build-extension
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Download extension artifact
      uses: actions/download-artifact@v4
      with:
        name: clipgo-extension

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: clipgo-v${{ needs.build-extension.outputs.version }}.zip
        tag_name: v${{ needs.build-extension.outputs.version }}
        name: ClipGo Extension v${{ needs.build-extension.outputs.version }}
        body: |
          ## ClipGo Extension v${{ needs.build-extension.outputs.version }}

          ### Features
          - AI 대화 플랫폼 텍스트 저장 및 관리
          - 직관적인 카테고리 시스템
          - 강력한 검색 기능
          - 다국어 지원 (한국어, 영어)

          ### Changes
          - 자동화된 테스트 환경 구축
          - Playwright MCP 통합
          - CI/CD 파이프라인 개선

          ### Installation
          1. Chrome 확장 프로그램 페이지에서 '개발자 모드' 활성화
          2. '압축해제된 확장 프로그램을 로드합니다' 클릭
          3. 다운로드한 zip 파일 압축 해제 후 폴더 선택

          ### Test Results
          - ✅ All tests passed (11/11)
          - ✅ Cross-browser compatibility verified
          - ✅ Security audit completed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}